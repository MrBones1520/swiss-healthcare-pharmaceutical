plugins {
    id "groovy"
    id "org.grails.grails-web"
    id "org.grails.plugins.views-json"
    id "idea"
    id "application"
    id "org.asciidoctor.jvm.convert"
    id "eclipse"
}

version "0.1"
group = "com.swiss.healthcare"

apply from: "gradle/asciidoc.gradle"
repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
}

configurations {
    configureEach {
        resolutionStrategy.force 'org.codehaus.groovy:groovy-xml:3.0.13'
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation("org.grails:grails-core")
    implementation("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors")
    implementation("org.grails:grails-plugin-rest")
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings")
    implementation("org.grails:grails-web-boot")
    implementation("org.grails.plugins:hibernate5")
    implementation("org.grails.plugins:views-json")
    implementation("org.grails.plugins:views-json-templates")
    implementation("org.hibernate:hibernate-core:5.6.15.Final")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-tomcat")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    //swagger
    //implementation('io.springfox:springfox-swagger2:3.0.0')
    //implementation('io.springfox:springfox-boot-starter:3.0.0')
    //implementation('io.springfox:springfox-swagger-ui:3.0.0')
    //>
    compileOnly("io.micronaut:micronaut-inject-groovy")
    console("org.grails:grails-console")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("javax.xml.bind:jaxb-api:2.3.1")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    //runtimeOnly("org.glassfish.web:el-impl:2.2.1-b05")
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.grails:grails-gorm-testing-support")
    testImplementation("org.grails:views-json-testing-support")
    testImplementation("org.spockframework:spock-core")
    testImplementation("org.testcontainers:spock")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation("io.micronaut:micronaut-http-client")
}

//ext {
//   // dockerTag = "swiss-healthcare-api:${project.version}"
//    dockerBuildDir = mkdir("${buildDir}/docker")
//}

application {
    mainClass.set("com.swiss.healthcare.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
//
//tasks.register('prepareDocker', Copy) {
//    dependsOn assemble
//    description = 'Copy files from src/main/docker and application jar to Docker temporal build directory'
//    group = 'Docker'
//
//    from 'src/main/docker'
//    from project.jar
//
//    into dockerBuildDir
//}
//
//tasks.register('createDockerfile', Dockerfile) {
//    dependsOn prepareDocker
//    description = 'Create a Dockerfile file'
//    group = 'Docker'
//
//    destFile = project.file("${dockerBuildDir}/Dockerfile")
//
//    from 'amazoncorretto:11-alpine-jdk'
//
//    exposePort 8080
//
//    workingDir '/app'
//
//    copyFile project.jar, 'application.jar'
//    copyFile 'app-entrypoint.sh', 'app-entrypoint.sh'
//    runCommand 'chmod +x app-entrypoint.sh'
//
//    entryPoint '/app/app-entrypoint.sh'
//}
//
//tasks.register('buildImage', DockerBuildImage) {
//    dependsOn createDockerfile
//    description = 'Create Docker image to run the Grails application'
//    group = 'Docker'
//
//    inputDir = file(dockerBuildDir)
//    images.add(dockerTag)
//}
